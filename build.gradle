buildscript {
	repositories {
		maven {
			url "http://repo.jfrog.org/artifactory/gradle"
		}
		jcenter()
		mavenLocal()
		dependencies {
			classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.1')
		 	classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
		}
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'com.jfrog.artifactory-upload'

group = 'com.thedeanda'
version = '2.2-SNAPSHOT'
sourceCompatibility = "1.7"
targetCompatibility = "1.7"

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	compileOnly "org.projectlombok:lombok:1.16.16"
	
	compile 'com.thedeanda.javajson:javajson-parser:1.+'
	
	compile 'org.eclipse.jetty:jetty-server:9.2.21.v20170120'
	compile 'org.eclipse.jetty:jetty-servlet:9.2.21.v20170120'
	compile 'org.eclipse.jetty:apache-jsp:9.2.21.v20170120'
	

	compile 'com.yahoo.platform.yui:yuicompressor:2.+'
	compile 'commons-cli:commons-cli:1.+'
	compile 'commons-io:commons-io:2.+'
	compile 'org.apache.commons:commons-lang3:3.+'
	compile 'dom4j:dom4j:1.+'
	compile 'org.slf4j:slf4j-api:1.+'
	compile 'org.slf4j:slf4j-simple:1.+'
	compile 'org.apache.httpcomponents:httpclient:4.+'
	compile 'com.h2database:h2:1.4.191'
	compile 'com.j256.ormlite:ormlite-core:4.48'
	compile 'com.j256.ormlite:ormlite-jdbc:4.48'
	
	compile 'org.japura:japura-gui:7.5.+'

	testCompile 'junit:junit:4.+'
	testCompile 'com.thedeanda:lorem:2.+'
	compile 'com.github.jponge:lzma-java:1.3'
	
}
jar {
    manifest {
        attributes 'Main-Class': 'com.thedeanda.ajaxproxy.Main'
    }
}

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:1.2.0"
  }
}

compileJava.doFirst {
	def prop = new Properties()
	def propFile = new File("${project.rootDir}/src/main/resources/version.properties");
	prop.setProperty("version", "$project.version")
	prop.setProperty("build-date", String.valueOf(new Date().getTime()))
	propFile.createNewFile();
	prop.store(propFile.newWriter(), null);

}


configurations {
	published
}
// artifactory {
// 	contextUrl = "http://repo.myorg.com/artifactory"
// 	publish {
// 		repository {
// 			if (version.matches(/[0-9\.]+$/)) {
// 				repoKey = 'libs-release-local'
// 			} else {
// 				repoKey = 'libs-snapshot-local'
// 			}
// 			username = "${artifactory_user}" //The publisher user name
// 			password = "${artifactory_password}" //The publisher password
// 		}
// 		defaults {
// 			publishConfigs('archives', 'published')
// 			//properties = ['build.status': "$it.project.status".toString()]
// 			publishPom = true //Publish generated POM files to Artifactory (true by default)
// 			publishIvy = false //Publish generated Ivy descriptor files to Artifactory (true by default)
// 		}
// 	}
// 	resolve {
// 		repository {
// 			repoKey = 'libs-release' //The Artifactory (preferably virtual) repository key to resolve from
// 			username = "${artifactory_user}" //Optional resolver user name (leave out to use anonymous resolution)
// 			password = "${artifactory_password}" //The resolver password
// 			maven = true
// 		}
// 	}
// }
task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}
artifactoryPublish {
	dependsOn javadocJar
}
artifacts {
	published javadocJar
}
